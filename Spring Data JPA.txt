Spring이 제공해주는 JPA 인터페이스 형태로 사용하는 것

	- JPA : EntityManager, createQuery, ... 복잡 => 추상화
		= 메서드가 좀 더 간결, 좀더 많음
		= 어느 정도는 나 대신 쿼리 메서드 제공 ex. 이 테이블에서 A 컬럼 값으로 조회
	- 페이징 기능


methods
	- 테이블 전체 조회 : findAll()
	- 데이터 개별 저장 : save(Entity entity)

	- 데이터 개별 조회 : findById(Id id);
	

Repository를 쉽게 바꾸기 위해 우리가 할 수 있는 설계

	ProductService는 ProductRepositoryInterface를 호출
	1) ProductRepository
		- save()
		- findProduct()
		- findProducts()

	2) SpringDataJPAProductRepository
		- save()
		- findById()
		- findAll()

공부하다 보면 만나는...
	findBy*** 라고 인터페이스 정의만 해도 JPA가 알아서 JPQL을 만들어줘요.
		- findByName(String name)
		- findByPrice(int price)
